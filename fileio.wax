(extern readfile (param filename str) (result str))
(@if TARGET_TS 1
	(asm "declare var require: any;")
	(asm "function readfile(filename) {")
	(asm "  let fs=require('fs');")
	(asm "  return fs.readFileSync(filename).toString();")
	(asm "}")
)
(@if TARGET_JS 1
	(asm "function readfile(filename) {")
	(asm "  let fs=require('fs');")
	(asm "  return fs.readFileSync(filename).toString();")
	(asm "}")
)
(@if TARGET_CPP 1
	(asm "#include <fstream>")
	(asm "#include <streambuf>")
	(asm "std::string readfile(std::string filename) {")
	(asm "  std::ifstream t(filename);")
	(asm "  std::string str((std::istreambuf_iterator<char>(t)), std::istreambuf_iterator<char>());")
	(asm "  return str;")
	(asm "}")
)
(@if TARGET_C 1
	(asm "char *readfile(char *filename) {")
	(asm "  FILE *f = fopen(filename, \"r\");")
	(asm "  fseek(f, 0, SEEK_END);")
	(asm "  int length = ftell(f);")
  	(asm "  fseek (f, 0, SEEK_SET);")
  	(asm "  char *buffer = ARRAY_ALLOC(sizeof(char),length);")
	(asm "  fread(buffer, 1, length, f);")
	(asm "  return buffer;")
	(asm "}")
)